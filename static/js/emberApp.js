// Generated by CoffeeScript 1.4.0
var SOCKET, TYPES;

window.App = Ember.Application.create({
	LOG_TRANSITIONS: true
});

App.Box = DS.Model.extend({
	height: DS.attr('number'),
	width: DS.attr('number'),
	left: DS.attr('number'),
	top: DS.attr('number'),
	text: DS.attr('string'),
	selected: DS.attr('boolean')
}, {
	defaultValue: false
});

App.Router.map(function () {
	this.resource("boxs", function () {
		this.resource("box", { path: ':box_id' });
	});
});

App.IndexRoute = Ember.Route.extend({
	redirect: function () {
		return this.replaceWith('boxs');
	}
});

App.BoxsRoute = Ember.Route.extend({
	model: function () {
		return App.Box.find();
	},
	setupController: function (controller, model) {
		controller.set('content', model);
		//return this._super();
	}
});

App.BoxsController = Ember.ArrayController.extend({
	content: [],
	selBox: null,
	addBox: function () {
		var newBox;
		newBox = App.store.createRecord(App.Box,{
			text: 'newBox',
			height: 100,
			width: 200
		});
		return newBox.save();
	},
	selectBox: function (box) {
		console.log("clicked box: " + box.id);
		var obj, _i, _len, _ref;
		_ref = this.get('content').toArray();
		for (_i = 0, _len = _ref.length; _i < _len; _i++) {
			obj = _ref[_i];
			obj.set('selected', false);
		};
		box.set('selected', true);
		return this.set('selBox', box);
	},
	delBox: function (box) {
		box.deleteRecord();
		return box.save();
	},
	saveText: function () {
		return App.store.commit();
	}
});

App.BoxView = Ember.View.extend({
	init: function() {
		this._super();
		var self = this;
		this.get("controller").content.on("didCreate", function() {
			alert("updated");
		});
	},
	templateName: 'box',
	tagName: 'div',
	classNames: ['box'],
	classNameBindings: ['selected'],
	attributeBindings: ['style'],
	controllerBinding: App.BoxController,
	selected: (function () {
		return this.get('content.selected');
	}).property('content.selected'),
	click: function (event) {
		console.log(this.get('controller'));
		window.box = this.get('content');
		return this.get('controller').selectBox(this.get('content'));
	},
	style: (function () {
		var height, heightString, left, leftString, top, topString, width, widthString;
		height = this.get('content.height');
		width = this.get('content.width');
		top = this.get('content.top');
		left = this.get('content.left');
		heightString = "height:" + height + "px;";
		widthString = "width:" + width + "px;";
		topString = "top:" + top + "px;";
		leftString = "left:" + left + "px;";
		return heightString + widthString + topString + leftString;
	}).property('content.height', 'content.width', 'content.top', 'content.left').cacheable()
});

window.Models = {};

SOCKET = "/";
/*
DS.SocketAdapter.map('App.Box', {
	box: {
		key: 'boxs'
	}
});
*/
App.store = DS.Store.create({
	revision: 12,
	adapter: DS.SocketAdapter.create({})
});

DS.Model.reopen({
	save: function () {
		App.store.commit();
		return this;
	}
});
